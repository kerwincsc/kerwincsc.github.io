============================================================
详解Linux bash中的变量
============================================================

bash变量类型
--------------------------------------------------

本地变量

局部变量

环境变量

位置变量

特殊变量(内置)

本地变量
--------------------------------------------------

varname=value: 作用域为整个bash进程可以使用;

变量命名规范：

#. 只能含字母, 数字和下划线, 并且以字母和下划线开头

#. 最好不要跟系统已有的环境变量重名

#. 见名知意

局部变量
--------------------------------------------------

local varname=value : 作用域为当前代码段;

环境变量
--------------------------------------------------

作用域为当前shell进程及其子进程, 不能影响到其父进程;

export varname=value “导出”,
如果变量已经定义可以只是用变量名 export varname, 即

#. export varname=value

#. varname=value

   export varname

脚本在执行命令时会启动一个子shell环境变量;

系统自动执行的脚本(非命令行启动)就需要自我定义需要的环境变量；

位置变量
--------------------------------------------------

``$1，$2，$3，……``

cat first.sh test.txt hello

$1: first.sh

$2: test.txt

$3: hello

shift：踢掉参数

shift n：踢掉n个参数，默认踢掉一个参数

特殊变量(内置)
--------------------------------------------------

$?: 上一个命令执行状态的返回值: ::

    程序执行可能有两种返回值：

      1. 程序执行结果

      2. 程序状态返回吗(0-255)

         0 则为执行正确

         1-255 则执行出错(1，2，127系统预留)；

$#：获取当前shell命令行中参数的总个数

$*：获取当前shell的所有参数 “$1 $2 $3 …，受IFS控制

$@：这个程序的所有参数 “$1″ “$2″ “$3″ “…”，不受IFS控制

$0 获取当前执行的shell脚本的文件名

$n 获取当前执行的shell脚本的第n个参数值，n=1..9

$$ 获取当前shell的进程号(PID)

$! 执行上一个指令的PID

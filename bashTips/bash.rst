BASH
======================================================================

Shell 基本特性
------------------------------------------------------------

shell 命令
++++++++++++++++++++++++++++++++++++++++++++++++++

- 命令的退出状态
  如果命令被信号终止, 则退出状态为 128+信号数


引用
------------------------------------------------------------

引用是用来移除对 shell 有特殊意义的字符或单词.

引用可被用来取消对特殊字符的特殊对待,
防止保留字被识别和防止参数扩展;

三种引用机制:

- 转义字符 ``\``
  对特定字符进行转义;
  如果一命令命令过长, 需要折行书写, 使用 / 确保是同一行的命令;

- 单引号 ``'``
  以单引号闭合的字符在单引号中保留了每个字符的字面值;
  一个单引号不会出现在单引号之间, 即使它的前面有一个反斜杠;

- 双引号 ``"``

  双引号里的字符将保留其字面值,
  以下除外: ``$ ` \`` 和打开历史展开功能时的 ``!``

  当处于 POSIX 模式中:
    - 即使打开了历史展开功能,
      双引号内的 **!** 也没有特殊意义;
    - 双引号中的'$' 和 '`' 保留自身的特殊意义;
    - 反引号后仅跟着如下符号: '$' , '`', '"', '\' 或者 *newline* 时,
      才保留其特殊意义;
    - 在双引号内, 被这些字符跟随的反斜杠将被移除.
    - 没有特殊意义字符之前的反引号将不作修改(不会被移除).

  在双引号里的一个双引号, 它之前有反引号的可被引用;

  如果打开, 除非出现在双引号内的 '!' 使用反引号逃逸, 否则历史命令展开将被执行;
  在 '!' 之前的反引号不会被移除;

  出现在双引号里的特殊字符 '*' 和 '@' 有特殊的意义;

ANSI-C 引用
++++++++++++++++++++++++++++++++++++++++++++++++++

形如 ``$'string'`` 的单词会被特殊对待.
  
  

历史记录
------------------------------------------------------------

``-o history`` 打开;

#. shell 变量
   **HISTSIZE** 历史记录大小, 默认500;

   **HISTIGNORE and HISTCONTROL**

   **HISTFILE** 默认值是 ~/.bash_history, bash 启动时读取此变量指定的文件
   中的记录作为历史记录;
   
   **HISTFILESIZE**
   
   **HISTTIMEFORMAT**

#. shell 选项
   histappend
   
   cmdhist
   
   lithist

#. 内置命令

  fc [#fc]_ [-e ename] [-lnr] [first] [last]

  fc -s [pat=rep] [command]

fc -l 仅列出最近的 16 条命令;

fc -l 100 仅列出 第100条到最近一条的命令;

fc -l 10 100 列出指定范围的命令;

fc -l -n 列出命令时, 不显示命令的序号;

fc -l -r 反向列出命令;

fc -e emacs 以 emacs 打开并显示最近一条命令;

   

#. 变量 ``FCEDIT`` 指定了显示或修改命令的编辑器

.. rubric:: 注

.. [#fc] Fix Command

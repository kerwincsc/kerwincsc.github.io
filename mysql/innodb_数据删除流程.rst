=====================
 InnoDB 数据删除流程
=====================

标记为删除及复用
==============

如果我们要删除某个记录, InnoDB 引擎只会把这个记录 **标记为删除**.
如果之后要再插入一个记录时, 可能会复用这个位置.
但是 **磁盘文件的大小并不会缩小**.

因为, InnoDB 的数据是 **按页存储**的, 所以如果删掉了一个数据页上的所有记录,
**整个数据页就可以被复用** 了.

进一步地, 如果用 delete 命令把整个表的数据删除, 所有的数据页都会被标记可复用.
但是磁盘上, 文件不会变小.

delete 命令其实只是把记录的位置, 或者数据页标记为了 " 可复用 ",
但磁盘文件的大小是不会变的. 也就是说, **通过 delete 命令是不能回收表空间的**.
这些可以复用, 而没有被使用的空间, 看起来就像是 " 空洞 ".

实际上, 不止是 **删除数据会造成空洞, 插入数据也会**.

如果数据是按照索引递增顺序插入的, 那么索引是紧凑的. 如果数据是随机插入的,
就可能造成索引的数据页分裂.

假设某数据页 A 已经满了, 这时再插入一行数据. 由于此页已满, 再插入数据时,
就不得不再申请一个新的页 B 来保存数据. 页分裂完成后, 数据页 A 的末尾就留下了空洞.

更新索引上的值, 可以理解为删除一个旧的值, 再插入一个新值. 这也会造成空洞.

也就是说, 经过大量增删改的表, 都是可以存在空洞的. 如果能够把这些空洞去掉,
就能达到收缩表空间的目的.

复用条件
--------

**数据页的利用和记录的复用是不同的**.

记录的复用, 只限于符合范围条件的数据. 如果插入记录的 ID 在被删除记录所在页的 ID
范围内, 就可以直接复用这个空间; 如果不在页的 ID 范围内, 就不可以复用.

而当整个页从 B+ 树里面摘掉以后, 可以复用到任何位置.

页合并
------

如果相邻的两个数据页利用率都很小, 系统就会把这两个页上的数据合并到其中一个页上,
另一个数据页就被标记为可复用.


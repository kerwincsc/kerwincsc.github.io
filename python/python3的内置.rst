======================================================================
python3的内置
======================================================================

特殊变量
------------------------------------------------------------

#. **__all__**

   python 模块中的 __all__, 可用于模块导入时限制, 如: ``from module import *``,
   此时被导入模块若定义了 __all__ 属性, 则只有__all__内指定的属性, 方法, 类可被导入.
   若没定义, 则导入模块内的所有公有属性, 方法和类;

#. **__file__**

   文件所在的路径

   ::

      import os
      print(os.__file__)

#. **__name__**

   一个模块被另一个程序第一次引入时, 其主程序将运行.
   如果我们想在模块被引入时, 模块中的某一程序块不执行,
   我们可以用 __name__ 属性来使该程序块仅在该模块自身运行时执行;

   当模块自己运行时, 其 __name__ 属性的值为 "__main__"

   ::

      #!/usr/bin/python3
      # Filename: using_name.py
 
      if __name__ == '__main__':
          print('程序自身在运行')
      else:
          print('我来自另一模块')

#. **__slots__**

   Python 允许在定义 class 的时候, 定义一个特殊的 __slots__ 变量,
   来限制该 class 实例能添加的属性.

   ::

      class Person(object):
          # __slots__ = ["name", "age"] # 效果相同
          __slots__ = ("name", "age")

      此类只允许有 name 与 age 属性, 额外添加会引发 AttributeError 异常;

特殊参数
------------------------------------------------------------

魔术方法
------------------------------------------------------------

.. image:: python_magic_method_info.png
